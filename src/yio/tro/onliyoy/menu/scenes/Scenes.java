package yio.tro.onliyoy.menu.scenes;

import yio.tro.onliyoy.menu.scenes.editor.*;
import yio.tro.onliyoy.menu.scenes.gameplay.*;
import yio.tro.onliyoy.menu.scenes.info.help.*;
import yio.tro.onliyoy.menu.scenes.info.SceneAboutGame;
import yio.tro.onliyoy.menu.scenes.info.SceneSpecialThanks;
import yio.tro.onliyoy.menu.scenes.options.SceneConfirmResetSettings;
import yio.tro.onliyoy.menu.scenes.options.SceneLanguages;
import yio.tro.onliyoy.menu.scenes.options.SceneSettings;
import yio.tro.onliyoy.menu.scenes.saves.*;

public class Scenes {

    public static SceneMainLobby mainLobby;
    public static SceneAboutGame aboutGame;
    public static SceneChooseGameMode chooseGameMode;
    public static SceneGameOverlay gameOverlay;
    public static SceneDefaultPauseMenu defaultPauseMenu;
    public static SceneNotification notification;
    public static SceneSettings settings;
    public static SceneHelpMenu helpMenu;
    public static SceneSpecialThanks specialThanks;
    public static SceneLanguages languages;
    public static SceneTestScreen testScreen;
    public static SceneDebugTests debugTests;
    public static SceneTestResults testResults;
    public static SceneSecretScreen secretScreen;
    public static SceneSetupSkirmish setupSkirmish;
    public static SceneKeyboard keyboard;
    public static SceneDebugPanel debugPanel;
    public static SceneMechanicsOverlay mechanicsOverlay;
    public static SceneResetTouchMode resetTouchMode;
    public static SceneEditorPauseMenu editorPauseMenu;
    public static SceneOpenInEditor openInEditor;
    public static SceneEditorPrepareToLaunch editorPrepareToLaunch;
    public static SceneLoadingTraining loadingTraining;
    public static SceneForefinger forefinger;
    public static SceneMessageDialog messageDialog;
    public static SceneUserLevels userLevels;
    public static SceneExceptionReport exceptionReport;
    public static ScenePrivacyPolicy privacyPolicy;
    public static SceneAgreeToPrivacyPolicy agreeToPrivacyPolicy;
    public static SceneSaveToSlot saveToSlot;
    public static SceneLoadFromSlot loadFromSlot;
    public static SceneEditorLobby editorLobby;
    public static SceneReplays replays;
    public static SceneReplayPauseMenu replayPauseMenu;
    public static SceneSingleEntityConfigure singleEntityConfigure;
    public static SceneReplayOverlay replayOverlay;
    public static SceneProvinceManagement provinceManagement;
    public static SceneEditorCreate editorCreate;
    public static SceneEditorOverlay editorOverlay;
    public static SceneEditorParams editorParams;
    public static SceneAiOnlyOverlay aiOnlyOverlay;
    public static SceneChooseIterationsQuantity chooseIterationsQuantity;
    public static SceneSlotContextMenu slotContextMenu;
    public static SceneConfirmSlotDeletion confirmSlotDeletion;
    public static SceneMatchResults matchResults;
    public static SceneConfirmRestart confirmRestart;
    public static SceneIncomeGraph incomeGraph;
    public static SceneConfirmEndTurn confirmEndTurn;
    public static SceneEditorLandscapePanel editorLandscapePanel;
    public static SceneEditorPiecesPanel editorPiecesPanel;
    public static SceneConfirmClearLevel confirmClearLevel;
    public static SceneRandomizePanel randomizePanel;
    public static SceneEditProvince editProvince;
    public static SceneComposeLetter composeLetter;
    public static SceneSetupMoneyCondition setupMoneyCondition;
    public static SceneSetupRelationCondition setupRelationCondition;
    public static SceneChooseEntity chooseEntity;
    public static SceneTmChooseLandsOverlay tmChooseLandsOverlay;
    public static SceneInbox inbox;
    public static SceneReadLetter readLetter;
    public static SceneSetupRveNotification setupRveNotification;
    public static SceneEntry entry;
    public static SceneKickedFromServer kickedFromServer;
    public static SceneQuickMatchSearching quickMatchSearching;
    public static SceneMatchLobby matchLobby;
    public static SceneChooseColor chooseColor;
    public static SceneMlUserInfo mlUserInfo;
    public static SceneSetupCustomMatch setupCustomMatch;
    public static SceneCustomMatches customMatches;
    public static SceneWaitMatchCreating waitMatchCreating;
    public static SceneWaitMatchJoining waitMatchJoining;
    public static SceneCaptainUI captainUI;
    public static SceneChooseCustomMap chooseCustomMap;
    public static SceneWaitMatchLaunching waitMatchLaunching;
    public static SceneNetOverlay netOverlay;
    public static SceneNetPauseMenu netPauseMenu;
    public static SceneConfirmExitMatch confirmExitMatch;
    public static SceneMatchInfoPanel matchInfoPanel;
    public static SceneNetMatchResults netMatchResults;
    public static SceneGuestProfilePanel guestProfilePanel;
    public static SceneChooseMatchToSpectate chooseMatchToSpectate;
    public static SceneKickedForTwoTurnSkip kickedForTwoTurnSkip;
    public static SceneAdmin admin;
    public static SceneSetupShutDown setupShutDown;
    public static SceneAnnounceShutDown announceShutDown;
    public static SceneCheckIn checkIn;
    public static SceneConfirmCheckIn confirmCheckIn;
    public static SceneWaitForCheckIn waitForCheckIn;
    public static SceneNormalProfilePanel normalProfilePanel;
    public static SceneOnSignedOut onSignedOut;
    public static SceneConfirmShareLevel confirmShareLevel;
    public static SceneWaitCompletionCheckLoading waitCompletionCheckLoading;
    public static SceneCompletionCheckPauseMenu completionCheckPauseMenu;
    public static SceneModerator moderator;
    public static SceneModInstruction modInstruction;
    public static SceneWaitToVerifyLevel waitToVerifyLevel;
    public static SceneVerificationPauseMenu verificationPauseMenu;
    public static SceneVerificationOverlay verificationOverlay;
    public static SceneConfirmDeclineLevel confirmDeclineLevel;
    public static SceneConfirmVerifyLevel confirmVerifyLevel;
    public static SceneWaitToPlayUserLevel waitToPlayUserLevel;
    public static SceneUserLevelPauseMenu userLevelPauseMenu;
    public static SceneConfirmDislikeLevel confirmDislikeLevel;
    public static SceneWaitForReport waitForReport;
    public static SceneReportPauseMenu reportPauseMenu;
    public static SceneReportOverlay reportOverlay;
    public static SceneConfirmDeleteLevel confirmDeleteLevel;
    public static SceneEditModerators editModerators;
    public static SceneConfirmRemoveModerator confirmRemoveModerator;
    public static SceneSearchForNewModerator searchForNewModerator;
    public static SceneConfirmAddModerator confirmAddModerator;
    public static SceneConfirmResetSettings confirmResetSettings;
    public static SceneFindUserByAdmin findUserByAdmin;
    public static SceneUserContextMenuByAdmin userContextMenuByAdmin;
    public static SceneToast toast;
    public static SceneSpectatorOverlay spectatorOverlay;
    public static SceneModActions modActions;
    public static SceneDebugChooseQuickMap debugChooseQuickMap;
    public static SceneRejoinButton rejoinButton;
    public static SceneWaitForRejoin waitForRejoin;
    public static SceneChooseMatchToRejoin chooseMatchToRejoin;
    public static SceneAlternativeUpdate alternativeUpdate;
    public static SceneModeratorContextMenuByAdmin moderatorContextMenuByAdmin;
    public static SceneSetupRestoreLevels setupRestoreLevels;
    public static SceneChooseAdminReport chooseAdminReport;
    public static SceneAdminTextReport adminTextReport;
    public static SceneOfflineMenu offlineMenu;
    public static SceneCalendar calendar;
    public static SceneCalendarPauseMenu calendarPauseMenu;
    public static SceneConfirmAskForRenaming confirmAskForRenaming;
    public static SceneWaitToCheckRenaming waitToCheckRenaming;
    public static SceneCheckRenaming checkRenaming;
    public static SceneChooseTutorial chooseTutorial;
    public static SceneHighlightArea highlightArea;
    public static SceneTutorialPauseMenu tutorialPauseMenu;
    public static SceneCampaign campaign;
    public static SceneCampaignPauseMenu campaignPauseMenu;
    public static SceneSaveCampaign saveCampaign;
    public static SceneExperienceView experienceView;
    public static SceneSearchUserLevel searchUserLevel;
    public static SceneQmfResults qmfResults;
    public static SceneChooseNetRatingPanel chooseNetRatingPanel;
    public static SceneLeaderboard leaderboard;
    public static SceneTemporaryCurrentLapView temporaryCurrentLapView;
    public static SceneSetupSmileysCondition setupSmileysCondition;
    public static SceneUserDossierByRating userDossierByRating;
    public static SceneShop shop;
    public static SceneFishExchangeDialog fishExchangeDialog;
    public static SceneConfirmPurchase confirmPurchase;
    public static ScenePhraseButton phraseButton;
    public static SceneChoosePhrase choosePhrase;
    public static SceneChooseLocalSkin chooseLocalSkin;
    public static SceneOfflineProfilePanel offlineProfilePanel;
    public static SceneChooseFishToBuy chooseFishToBuy;
    public static SceneConfirmBuyFish confirmBuyFish;
    public static SceneFishExplanation fishExplanation;
    public static SceneProfitReport profitReport;
    public static SceneEditRelation editRelation;
    public static SceneModAdditionReminder modAdditionReminder;
    public static SceneConfirmLogout confirmLogout;
    public static SceneReplayContextMenu replayContextMenu;
    public static SceneHowToSupportArticle howToSupportArticle;
    public static SceneHowToSupportButton howToSupportButton;
    public static SceneResearchFactorBehavior researchFactorBehavior;
    public static SceneSetupPlotParameters setupPlotParameters;
    public static SceneSpawnPlotsByMovementType spawnPlotsByMovementType;
    public static SceneSpawnPlotsBySpeed spawnPlotsBySpeed;
    public static SceneMassCheckRenamings massCheckRenamings;
    public static SceneOnlineDisclaimer onlineDisclaimer;
    public static SceneChooseDuelingMap chooseDuelingMap;
    public static SceneSearchingForDuel searchingForDuel;
    public static SceneAttraction attraction;
    public static SceneOfflineUserLevels offlineUserLevels;
    public static SceneOfflineUlevSearch offlineUlevSearch;
    public static SceneUlevFilters ulevFilters;


    public static void createAllScenes() {
        mainLobby = new SceneMainLobby();
        aboutGame = new SceneAboutGame();
        chooseGameMode = new SceneChooseGameMode();
        gameOverlay = new SceneGameOverlay();
        defaultPauseMenu = new SceneDefaultPauseMenu();
        notification = new SceneNotification();
        settings = new SceneSettings();
        helpMenu = new SceneHelpMenu();
        specialThanks = new SceneSpecialThanks();
        languages = new SceneLanguages();
        testScreen = new SceneTestScreen();
        debugTests = new SceneDebugTests();
        testResults = new SceneTestResults();
        secretScreen = new SceneSecretScreen();
        setupSkirmish = new SceneSetupSkirmish();
        keyboard = new SceneKeyboard();
        debugPanel = new SceneDebugPanel();
        mechanicsOverlay = new SceneMechanicsOverlay();
        resetTouchMode = new SceneResetTouchMode();
        editorPauseMenu = new SceneEditorPauseMenu();
        openInEditor = new SceneOpenInEditor();
        editorPrepareToLaunch = new SceneEditorPrepareToLaunch();
        loadingTraining = new SceneLoadingTraining();
        forefinger = new SceneForefinger();
        messageDialog = new SceneMessageDialog();
        userLevels = new SceneUserLevels();
        exceptionReport = new SceneExceptionReport();
        privacyPolicy = new ScenePrivacyPolicy();
        agreeToPrivacyPolicy = new SceneAgreeToPrivacyPolicy();
        saveToSlot = new SceneSaveToSlot();
        loadFromSlot = new SceneLoadFromSlot();
        editorLobby = new SceneEditorLobby();
        replays = new SceneReplays();
        replayPauseMenu = new SceneReplayPauseMenu();
        singleEntityConfigure = new SceneSingleEntityConfigure();
        replayOverlay = new SceneReplayOverlay();
        provinceManagement = new SceneProvinceManagement();
        editorCreate = new SceneEditorCreate();
        editorOverlay = new SceneEditorOverlay();
        editorParams = new SceneEditorParams();
        aiOnlyOverlay = new SceneAiOnlyOverlay();
        chooseIterationsQuantity = new SceneChooseIterationsQuantity();
        slotContextMenu = new SceneSlotContextMenu();
        confirmSlotDeletion = new SceneConfirmSlotDeletion();
        matchResults = new SceneMatchResults();
        confirmRestart = new SceneConfirmRestart();
        incomeGraph = new SceneIncomeGraph();
        confirmEndTurn = new SceneConfirmEndTurn();
        editorLandscapePanel = new SceneEditorLandscapePanel();
        editorPiecesPanel = new SceneEditorPiecesPanel();
        confirmClearLevel = new SceneConfirmClearLevel();
        randomizePanel = new SceneRandomizePanel();
        editProvince = new SceneEditProvince();
        composeLetter = new SceneComposeLetter();
        setupMoneyCondition = new SceneSetupMoneyCondition();
        setupRelationCondition = new SceneSetupRelationCondition();
        chooseEntity = new SceneChooseEntity();
        tmChooseLandsOverlay = new SceneTmChooseLandsOverlay();
        inbox = new SceneInbox();
        readLetter = new SceneReadLetter();
        setupRveNotification = new SceneSetupRveNotification();
        entry = new SceneEntry();
        kickedFromServer = new SceneKickedFromServer();
        quickMatchSearching = new SceneQuickMatchSearching();
        matchLobby = new SceneMatchLobby();
        chooseColor = new SceneChooseColor();
        mlUserInfo = new SceneMlUserInfo();
        setupCustomMatch = new SceneSetupCustomMatch();
        customMatches = new SceneCustomMatches();
        waitMatchCreating = new SceneWaitMatchCreating();
        waitMatchJoining = new SceneWaitMatchJoining();
        captainUI = new SceneCaptainUI();
        chooseCustomMap = new SceneChooseCustomMap();
        waitMatchLaunching = new SceneWaitMatchLaunching();
        netOverlay = new SceneNetOverlay();
        netPauseMenu = new SceneNetPauseMenu();
        confirmExitMatch = new SceneConfirmExitMatch();
        matchInfoPanel = new SceneMatchInfoPanel();
        netMatchResults = new SceneNetMatchResults();
        guestProfilePanel = new SceneGuestProfilePanel();
        chooseMatchToSpectate = new SceneChooseMatchToSpectate();
        kickedForTwoTurnSkip = new SceneKickedForTwoTurnSkip();
        admin = new SceneAdmin();
        setupShutDown = new SceneSetupShutDown();
        announceShutDown = new SceneAnnounceShutDown();
        checkIn = new SceneCheckIn();
        confirmCheckIn = new SceneConfirmCheckIn();
        waitForCheckIn = new SceneWaitForCheckIn();
        normalProfilePanel = new SceneNormalProfilePanel();
        onSignedOut = new SceneOnSignedOut();
        confirmShareLevel = new SceneConfirmShareLevel();
        waitCompletionCheckLoading = new SceneWaitCompletionCheckLoading();
        completionCheckPauseMenu = new SceneCompletionCheckPauseMenu();
        moderator = new SceneModerator();
        modInstruction = new SceneModInstruction();
        waitToVerifyLevel = new SceneWaitToVerifyLevel();
        verificationPauseMenu = new SceneVerificationPauseMenu();
        verificationOverlay = new SceneVerificationOverlay();
        confirmDeclineLevel = new SceneConfirmDeclineLevel();
        confirmVerifyLevel = new SceneConfirmVerifyLevel();
        waitToPlayUserLevel = new SceneWaitToPlayUserLevel();
        userLevelPauseMenu = new SceneUserLevelPauseMenu();
        confirmDislikeLevel = new SceneConfirmDislikeLevel();
        waitForReport = new SceneWaitForReport();
        reportPauseMenu = new SceneReportPauseMenu();
        reportOverlay = new SceneReportOverlay();
        confirmDeleteLevel = new SceneConfirmDeleteLevel();
        editModerators = new SceneEditModerators();
        confirmRemoveModerator = new SceneConfirmRemoveModerator();
        searchForNewModerator = new SceneSearchForNewModerator();
        confirmAddModerator = new SceneConfirmAddModerator();
        confirmResetSettings = new SceneConfirmResetSettings();
        findUserByAdmin = new SceneFindUserByAdmin();
        userContextMenuByAdmin = new SceneUserContextMenuByAdmin();
        toast = new SceneToast();
        spectatorOverlay = new SceneSpectatorOverlay();
        modActions = new SceneModActions();
        debugChooseQuickMap = new SceneDebugChooseQuickMap();
        rejoinButton = new SceneRejoinButton();
        waitForRejoin = new SceneWaitForRejoin();
        chooseMatchToRejoin = new SceneChooseMatchToRejoin();
        alternativeUpdate = new SceneAlternativeUpdate();
        moderatorContextMenuByAdmin = new SceneModeratorContextMenuByAdmin();
        setupRestoreLevels = new SceneSetupRestoreLevels();
        chooseAdminReport = new SceneChooseAdminReport();
        adminTextReport = new SceneAdminTextReport();
        offlineMenu = new SceneOfflineMenu();
        calendar = new SceneCalendar();
        calendarPauseMenu = new SceneCalendarPauseMenu();
        confirmAskForRenaming = new SceneConfirmAskForRenaming();
        waitToCheckRenaming = new SceneWaitToCheckRenaming();
        checkRenaming = new SceneCheckRenaming();
        chooseTutorial = new SceneChooseTutorial();
        highlightArea = new SceneHighlightArea();
        tutorialPauseMenu = new SceneTutorialPauseMenu();
        campaign = new SceneCampaign();
        campaignPauseMenu = new SceneCampaignPauseMenu();
        saveCampaign = new SceneSaveCampaign();
        experienceView = new SceneExperienceView();
        searchUserLevel = new SceneSearchUserLevel();
        qmfResults = new SceneQmfResults();
        chooseNetRatingPanel = new SceneChooseNetRatingPanel();
        leaderboard = new SceneLeaderboard();
        temporaryCurrentLapView = new SceneTemporaryCurrentLapView();
        setupSmileysCondition = new SceneSetupSmileysCondition();
        userDossierByRating = new SceneUserDossierByRating();
        shop = new SceneShop();
        fishExchangeDialog = new SceneFishExchangeDialog();
        confirmPurchase = new SceneConfirmPurchase();
        phraseButton = new ScenePhraseButton();
        choosePhrase = new SceneChoosePhrase();
        chooseLocalSkin = new SceneChooseLocalSkin();
        offlineProfilePanel = new SceneOfflineProfilePanel();
        chooseFishToBuy = new SceneChooseFishToBuy();
        confirmBuyFish = new SceneConfirmBuyFish();
        fishExplanation = new SceneFishExplanation();
        profitReport = new SceneProfitReport();
        editRelation = new SceneEditRelation();
        modAdditionReminder = new SceneModAdditionReminder();
        confirmLogout = new SceneConfirmLogout();
        replayContextMenu = new SceneReplayContextMenu();
        howToSupportArticle = new SceneHowToSupportArticle();
        howToSupportButton = new SceneHowToSupportButton();
        researchFactorBehavior = new SceneResearchFactorBehavior();
        setupPlotParameters = new SceneSetupPlotParameters();
        spawnPlotsByMovementType = new SceneSpawnPlotsByMovementType();
        spawnPlotsBySpeed = new SceneSpawnPlotsBySpeed();
        massCheckRenamings = new SceneMassCheckRenamings();
        onlineDisclaimer = new SceneOnlineDisclaimer();
        chooseDuelingMap = new SceneChooseDuelingMap();
        searchingForDuel = new SceneSearchingForDuel();
        attraction = new SceneAttraction();
        offlineUserLevels = new SceneOfflineUserLevels();
        offlineUlevSearch = new SceneOfflineUlevSearch();
        ulevFilters = new SceneUlevFilters();
    }
}
